#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–∏—Å—Ç–∞ GTM –≤ Supabase
"""

import requests
import json

# Supabase Configuration
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"

# Headers for Supabase API
HEADERS = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json',
}

def check_gtm_artist():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ç–∏—Å—Ç–∞ GTM"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä—Ç–∏—Å—Ç–∞ GTM
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/artists?id=eq.14",
            headers=HEADERS
        )
        
        if response.status_code == 200:
            artists = response.json()
            if artists:
                artist = artists[0]
                print("üìã –î–∞–Ω–Ω—ã–µ –∞—Ä—Ç–∏—Å—Ç–∞ GTM (ID 14):")
                print(f"   –ò–º—è: {artist.get('name')}")
                print(f"   –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: {artist.get('specialties')}")
                print(f"   –ì–æ—Ä–æ–¥–∞: {artist.get('city')}")
                print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {artist.get('is_active')}")
                print(f"   Telegram: {artist.get('telegram')}")
                print(f"   Avatar URL: {artist.get('avatar_url')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ specialties
                specialties = artist.get('specialties', [])
                if 'GTM BRAND' in specialties:
                    print("‚úÖ GTM BRAND –Ω–∞–π–¥–µ–Ω –≤ specialties")
                else:
                    print("‚ùå GTM BRAND –ù–ï –Ω–∞–π–¥–µ–Ω –≤ specialties")
                
                if 'Tattoo' in specialties:
                    print("‚ùå Tattoo –Ω–∞–π–¥–µ–Ω –≤ specialties (–ù–ï –î–û–õ–ñ–ï–ù –ë–´–¢–¨)")
                else:
                    print("‚úÖ Tattoo –ù–ï –Ω–∞–π–¥–µ–Ω –≤ specialties (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
                
                return artist
            else:
                print("‚ùå –ê—Ä—Ç–∏—Å—Ç GTM –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Ä—Ç–∏—Å—Ç–∞: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞—Ä—Ç–∏—Å—Ç–∞: {e}")
        return None

def check_all_artists():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤"""
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/artists",
            headers=HEADERS
        )
        
        if response.status_code == 200:
            artists = response.json()
            print(f"\nüìã –í—Å–µ –∞—Ä—Ç–∏—Å—Ç—ã ({len(artists)}):")
            for artist in artists:
                name = artist.get('name', 'Unknown')
                specialties = artist.get('specialties', [])
                print(f"   {name} (ID: {artist.get('id')}): {specialties}")
            
            return artists
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Ä—Ç–∏—Å—Ç–æ–≤: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞—Ä—Ç–∏—Å—Ç–æ–≤: {e}")
        return []

def check_artist_categories():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–≤—è–∑–∏ –∞—Ä—Ç–∏—Å—Ç–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/artist_categories?artist_id=eq.14",
            headers=HEADERS
        )
        
        if response.status_code == 200:
            categories = response.json()
            print(f"\nüìã –°–≤—è–∑–∏ –∞—Ä—Ç–∏—Å—Ç–∞ GTM —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:")
            for cat in categories:
                print(f"   - –ö–∞—Ç–µ–≥–æ—Ä–∏—è ID: {cat.get('category_id')}")
            
            return categories
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤—è–∑–µ–π: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–≤—è–∑–µ–π: {e}")
        return []

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ç–∏—Å—Ç–∞ GTM...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ç–∏—Å—Ç–∞ GTM
    gtm_artist = check_gtm_artist()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∞—Ä—Ç–∏—Å—Ç—ã
    all_artists = check_all_artists()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    categories = check_artist_categories()
    
    print("\nüéØ –í—ã–≤–æ–¥:")
    if gtm_artist:
        specialties = gtm_artist.get('specialties', [])
        if 'GTM BRAND' in specialties and 'Tattoo' not in specialties:
            print("‚úÖ –ê—Ä—Ç–∏—Å—Ç GTM –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ - —Ç–æ–ª—å–∫–æ GTM BRAND")
        else:
            print("‚ùå –ê—Ä—Ç–∏—Å—Ç GTM –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            if 'Tattoo' in specialties:
                print("   - –ù—É–∂–Ω–æ —É–±—Ä–∞—Ç—å Tattoo –∏–∑ specialties")
            if 'GTM BRAND' not in specialties:
                print("   - –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å GTM BRAND –≤ specialties")

if __name__ == "__main__":
    main() 