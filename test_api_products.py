#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –ø—Ä–æ–¥—É–∫—Ç–æ–≤
"""

import requests
import json

# Supabase Configuration
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"

# Headers for Supabase API
HEADERS = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json',
}

def test_products_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–æ–¥—É–∫—Ç–æ–≤...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/products",
            headers=HEADERS
        )
        
        print(f"üìã –¢–µ—Å—Ç 1 - –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            products = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(products)}")
            for product in products:
                print(f"   - {product.get('name')} (ID: {product.get('id')}, Master: {product.get('master_id')})")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –∞—Ä—Ç–∏—Å—Ç–∞ GTM (ID 14)
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/products?master_id=eq.14",
            headers=HEADERS
        )
        
        print(f"\nüìã –¢–µ—Å—Ç 2 - –ü—Ä–æ–¥—É–∫—Ç—ã –∞—Ä—Ç–∏—Å—Ç–∞ GTM (ID 14):")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            products = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(products)}")
            for product in products:
                print(f"   - {product.get('name')} (ID: {product.get('id')})")
                print(f"     –¶–µ–Ω–∞: {product.get('price')} ‚ÇΩ")
                print(f"     –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.get('category')}")
                print(f"     Master ID: {product.get('master_id')}")
                print(f"     Master Name: {product.get('master_name')}")
                print(f"     Master Telegram: {product.get('master_telegram')}")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–∏—Ç—å –∞—Ä—Ç–∏—Å—Ç–∞ GTM
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/artists?id=eq.14",
            headers=HEADERS
        )
        
        print(f"\nüìã –¢–µ—Å—Ç 3 - –ê—Ä—Ç–∏—Å—Ç GTM (ID 14):")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            artists = response.json()
            if artists:
                artist = artists[0]
                print(f"   - –ò–º—è: {artist.get('name')}")
                print(f"     ID: {artist.get('id')}")
                print(f"     –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: {artist.get('specialties')}")
                print(f"     –ê–≤–∞—Ç–∞—Ä: {artist.get('avatar_url')}")
            else:
                print("   ‚ùå –ê—Ä—Ç–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ API endpoints"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints...")
    
    endpoints = [
        "/rest/v1/products",
        "/rest/v1/products?master_id=eq.14",
        "/rest/v1/artists?id=eq.14",
        "/rest/v1/artists",
    ]
    
    for endpoint in endpoints:
        try:
            response = requests.get(
                f"{SUPABASE_URL}{endpoint}",
                headers=HEADERS
            )
            
            print(f"üìã {endpoint}:")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code == 200:
                data = response.json()
                if isinstance(data, list):
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(data)}")
                else:
                    print(f"   –î–∞–Ω–Ω—ã–µ: {data}")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ø—Ä–æ–¥—É–∫—Ç–æ–≤...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    test_products_api()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints
    test_api_endpoints()
    
    print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 