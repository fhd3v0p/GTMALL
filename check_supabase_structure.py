#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü –≤ Supabase
"""

import requests
import json

# Supabase Configuration
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"

# Headers for Supabase API
HEADERS = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json',
}

def check_table_structure(table_name: str):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/{table_name}?limit=1",
            headers=HEADERS
        )
        
        if response.status_code == 200:
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {table_name} –¥–æ—Å—Ç—É–ø–Ω–∞")
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            data_response = requests.get(
                f"{SUPABASE_URL}/rest/v1/{table_name}",
                headers=HEADERS
            )
            
            if data_response.status_code == 200:
                data = data_response.json()
                if data:
                    print(f"   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–ª–µ–π: {list(data[0].keys())}")
                else:
                    print(f"   –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è")
            else:
                print(f"   –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {data_response.status_code}")
        else:
            print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table_name} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã {table_name}: {e}")

def check_storage_bucket():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ Storage bucket"""
    try:
        response = requests.get(
            f"{SUPABASE_URL}/storage/v1/bucket/gtm-assets-public",
            headers=HEADERS
        )
        
        if response.status_code == 200:
            print("‚úÖ Storage bucket gtm-assets-public –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå Storage bucket –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Storage: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Supabase...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    tables = ['artists', 'products', 'users', 'categories']
    
    for table in tables:
        print(f"\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É {table}...")
        check_table_structure(table)
    
    print(f"\nüì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º Storage...")
    check_storage_bucket()

if __name__ == "__main__":
    main() 