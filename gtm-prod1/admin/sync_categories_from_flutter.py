#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Django –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å—é
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gtm_admin_panel.settings')
django.setup()

from admin_panel.models import Category

def sync_categories_from_flutter():
    """
    –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Django
    """
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (master_cloud_screen.dart)
    flutter_categories = [
        # –¢–æ–≤–∞—Ä—ã
        {'name': 'GTM BRAND', 'type': 'product'},
        {'name': 'Jewelry', 'type': 'product'},
        {'name': 'Custom', 'type': 'product'},
        {'name': 'Second', 'type': 'product'},
        
        # –£—Å–ª—É–≥–∏
        {'name': 'Tattoo', 'type': 'service'},
        {'name': 'Hair', 'type': 'service'},
        {'name': 'Nails', 'type': 'service'},
        {'name': 'Piercing', 'type': 'service'},
    ]
    
    print("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ Flutter: {len(flutter_categories)}")
    
    created_count = 0
    updated_count = 0
    existing_count = 0
    
    for cat_data in flutter_categories:
        name = cat_data['name']
        cat_type = cat_data['type']
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
        category, created = Category.objects.get_or_create(
            name=name,
            defaults={
                'type': cat_type,
            }
        )
        
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {name} ({cat_type})")
            created_count += 1
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∏–ø
            if category.type != cat_type:
                category.type = cat_type
                category.save()
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {name} ({cat_type})")
                updated_count += 1
            else:
                print(f"‚ÑπÔ∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {name} ({cat_type})")
                existing_count += 1
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö: {created_count}")
    print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}")
    print(f"   ‚ÑπÔ∏è  –£–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: {existing_count}")
    print(f"   üìà –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {Category.objects.count()}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\nüìã –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:")
    for cat in Category.objects.all().order_by('type', 'name'):
        print(f"   ‚Ä¢ {cat.name} ({cat.get_type_display()})")
    
    return True

def create_additional_categories():
    """
    –°–æ–∑–¥–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è
    """
    additional_categories = [
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        {'name': 'Accessories', 'type': 'product'},
        {'name': 'Clothing', 'type': 'product'},
        {'name': 'Shoes', 'type': 'product'},
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
        {'name': 'Makeup', 'type': 'service'},
        {'name': 'Massage', 'type': 'service'},
        {'name': 'Fitness', 'type': 'service'},
        {'name': 'Beauty', 'type': 'service'},
    ]
    
    print("\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    
    for cat_data in additional_categories:
        name = cat_data['name']
        cat_type = cat_data['type']
        
        category, created = Category.objects.get_or_create(
            name=name,
            defaults={'type': cat_type}
        )
        
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {name} ({cat_type})")
        else:
            print(f"‚ÑπÔ∏è  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {name}")

if __name__ == "__main__":
    try:
        # –û—Å–Ω–æ–≤–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
        sync_categories_from_flutter()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        create_additional_categories()
        
        print("\nüéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        sys.exit(1) 