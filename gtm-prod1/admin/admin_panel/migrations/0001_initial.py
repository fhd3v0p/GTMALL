# Generated by Django 5.2.4 on 2025-08-05 07:22

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя артиста')),
                ('bio', models.TextField(blank=True, verbose_name='Биография')),
                ('avatar_url', models.URLField(blank=True, verbose_name='URL аватара')),
                ('folder_name', models.CharField(blank=True, max_length=255, verbose_name='Название папки')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Артист',
                'verbose_name_plural': 'Артисты',
                'db_table': 'artists',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название категории')),
                ('type', models.CharField(choices=[('service', 'Услуга'), ('product', 'Товар')], default='service', max_length=20, verbose_name='Тип')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название города')),
                ('abbr', models.CharField(blank=True, max_length=10, verbose_name='Аббревиатура')),
                ('dx', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, verbose_name='Координата X')),
                ('dy', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, verbose_name='Координата Y')),
                ('size', models.IntegerField(default=50, verbose_name='Размер')),
                ('telegram_link', models.URLField(blank=True, verbose_name='Telegram ссылка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Giveaway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('prize', models.CharField(max_length=200)),
                ('telegram_folder', models.CharField(max_length=200)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('max_participants', models.IntegerField(default=1000)),
                ('current_participants', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Активен'), ('paused', 'Остановлен'), ('finished', 'Завершен')], default='active', max_length=20)),
                ('auto_winner', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'giveaways',
            },
        ),
        migrations.CreateModel(
            name='GiveawayChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.BigIntegerField(unique=True)),
                ('channel_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'giveaway_channels',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('telegram_link', models.URLField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subscription_channels',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('referred_by', models.CharField(blank=True, max_length=50, null=True)),
                ('registered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='ArtistLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram', models.CharField(blank=True, max_length=255, verbose_name='Telegram')),
                ('telegram_url', models.URLField(blank=True, verbose_name='Telegram URL')),
                ('instagram', models.CharField(blank=True, max_length=255, verbose_name='Instagram')),
                ('tiktok', models.CharField(blank=True, max_length=255, verbose_name='TikTok')),
                ('tiktok_url', models.URLField(blank=True, verbose_name='TikTok URL')),
                ('pinterest', models.CharField(blank=True, max_length=255, verbose_name='Pinterest')),
                ('pinterest_url', models.URLField(blank=True, verbose_name='Pinterest URL')),
                ('booking_url', models.URLField(blank=True, verbose_name='Booking URL')),
                ('location_html', models.TextField(blank=True, verbose_name='Location HTML')),
                ('gallery_html', models.TextField(blank=True, verbose_name='Gallery HTML')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.artist', verbose_name='Артист')),
            ],
            options={
                'verbose_name': 'Ссылки артиста',
                'verbose_name_plural': 'Ссылки артистов',
                'db_table': 'artist_links',
            },
        ),
        migrations.CreateModel(
            name='ArtistCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.artist', verbose_name='Артист')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория артиста',
                'verbose_name_plural': 'Категории артистов',
                'db_table': 'artist_categories',
                'unique_together': {('artist', 'category')},
            },
        ),
        migrations.AddField(
            model_name='artist',
            name='categories',
            field=models.ManyToManyField(through='admin_panel.ArtistCategory', to='admin_panel.category', verbose_name='Категории'),
        ),
        migrations.CreateModel(
            name='ArtistCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.artist', verbose_name='Артист')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Город артиста',
                'verbose_name_plural': 'Города артистов',
                'db_table': 'artist_cities',
                'unique_together': {('artist', 'city')},
            },
        ),
        migrations.AddField(
            model_name='artist',
            name='cities',
            field=models.ManyToManyField(through='admin_panel.ArtistCity', to='admin_panel.city', verbose_name='Города'),
        ),
        migrations.CreateModel(
            name='TaskCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=100)),
                ('task_number', models.IntegerField()),
                ('completed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_completions', to='admin_panel.user')),
            ],
            options={
                'db_table': 'task_completions',
            },
        ),
        migrations.CreateModel(
            name='ReferralInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invitee_id', models.BigIntegerField()),
                ('invitee_username', models.CharField(blank=True, max_length=100, null=True)),
                ('invitee_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('invited_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('joined', 'Присоединился'), ('expired', 'Истек')], default='pending', max_length=20)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to='admin_panel.user')),
            ],
            options={
                'db_table': 'referral_invites',
            },
        ),
    ]
