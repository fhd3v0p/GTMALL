#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ Django –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
–û—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ 8 –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è Master Cloud Screen
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gtm_admin_panel.settings')
django.setup()

from admin_panel.models import Category, Artist, Product, City
from django.utils import timezone

def update_categories_for_master_cloud():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è Master Cloud Screen"""
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è Master Cloud Screen...")
    
    # 8 –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è Master Cloud Screen
    master_cloud_categories = [
        # –ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (4 —à—Ç—É–∫–∏)
        {'name': 'GTM BRAND', 'type': 'product'},
        {'name': 'Jewelry', 'type': 'product'},
        {'name': 'Custom', 'type': 'product'},
        {'name': 'Second', 'type': 'product'},
        
        # –°–µ—Ä–≤–∏—Å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (4 —à—Ç—É–∫–∏)
        {'name': 'Tattoo', 'type': 'service'},
        {'name': 'Hair', 'type': 'service'},
        {'name': 'Nails', 'type': 'service'},
        {'name': 'Piercing', 'type': 'service'},
    ]
    
    print(f"üìã –û—Å–Ω–æ–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(master_cloud_categories)}")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    all_categories = Category.objects.all()
    print(f"üìä –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –ë–î: {all_categories.count()}")
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for cat_data in master_cloud_categories:
        category, created = Category.objects.get_or_create(
            name=cat_data['name'],
            defaults={
                'type': cat_data['type'],
                'is_active': True,
                'created_at': timezone.now()
            }
        )
        
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name} ({category.get_type_display()})")
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            category.type = cat_data['type']
            category.is_active = True
            category.save()
            print(f"‚ÑπÔ∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {category.name} ({category.get_type_display()})")
    
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories_to_deactivate = Category.objects.exclude(
        name__in=[cat['name'] for cat in master_cloud_categories]
    )
    
    print(f"üìã –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
    deactivated_count = 0
    for category in categories_to_deactivate:
        category.is_active = False
        category.save()
        print(f"   ‚Ä¢ {category.name} ({category.get_type_display()}) - –î–ï–ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê")
        deactivated_count += 1
    
    print(f"‚úÖ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {deactivated_count}")
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    active_categories = Category.objects.filter(is_active=True)
    inactive_categories = Category.objects.filter(is_active=False)
    
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
    print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {active_categories.count()}")
    print(f"   üìã –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {inactive_categories.count()}")
    
    print(f"üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è Master Cloud Screen:")
    for category in active_categories.order_by('type', 'name'):
        print(f"   ‚Ä¢ {category.name} ({category.get_type_display()})")
    
    return active_categories

def create_sample_artists():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∞—Ä—Ç–∏—Å—Ç–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∞—Ä—Ç–∏—Å—Ç–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    active_categories = Category.objects.filter(is_active=True)
    
    # –ü—Ä–∏–º–µ—Ä—ã –∞—Ä—Ç–∏—Å—Ç–æ–≤
    sample_artists = [
        {
            'name': 'EMI',
            'bio': '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∞—Ç—É-–º–∞—Å—Ç–µ—Ä —Å 5-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∞—Ö –∏ –º–∏–Ω–∏–º–∞–ª–∏–∑–º–µ.',
            'categories': ['Tattoo', 'Second'],
            'cities': ['–ú–æ—Å–∫–≤–∞']
        },
        {
            'name': 'Alena',
            'bio': '–ú–∞—Å—Ç–µ—Ä –ø–æ –º–∞–Ω–∏–∫—é—Ä—É –∏ –ø–µ–¥–∏–∫—é—Ä—É. –°–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–∏–∑–∞–π–Ω—ã –Ω–æ–≥—Ç–µ–π –¥–ª—è –ª—é–±–æ–≥–æ —Å–ª—É—á–∞—è.',
            'categories': ['Nails', 'Custom'],
            'cities': ['–ú–æ—Å–∫–≤–∞']
        },
        {
            'name': 'Lin++',
            'bio': '–°—Ç–∏–ª–∏—Å—Ç-–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä. –°–æ–∑–¥–∞—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑—ã –∏ —É–∫–ª–∞–¥–∫–∏ –¥–ª—è –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –≤–æ–ª–æ—Å.',
            'categories': ['Hair', 'GTM BRAND'],
            'cities': ['–ú–æ—Å–∫–≤–∞']
        }
    ]
    
    for artist_data in sample_artists:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞—Ä—Ç–∏—Å—Ç
            artist = Artist.objects.filter(name=artist_data['name']).first()
            
            if artist:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞—Ä—Ç–∏—Å—Ç–∞
                artist.bio = artist_data['bio']
                artist.save()
                print(f"‚ÑπÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω –∞—Ä—Ç–∏—Å—Ç: {artist.name}")
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞—Ä—Ç–∏—Å—Ç–∞
                artist = Artist.objects.create(
                    name=artist_data['name'],
                    bio=artist_data['bio'],
                    avatar_url=f'https://gtm.baby/avatars/{artist_data["name"].lower()}.jpg',
                    created_at=timezone.now()
                )
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞—Ä—Ç–∏—Å—Ç: {artist.name}")
            
            # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
            artist.categories.clear()
            for cat_name in artist_data['categories']:
                try:
                    category = Category.objects.get(name=cat_name, is_active=True)
                    artist.categories.add(category)
                    print(f"   üìã –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name}")
                except Category.DoesNotExist:
                    print(f"   ‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {cat_name}")
            
            # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
            artist.cities.clear()
            for city_name in artist_data['cities']:
                try:
                    city = City.objects.get(name=city_name)
                    artist.cities.add(city)
                    print(f"   üèôÔ∏è  –î–æ–±–∞–≤–ª–µ–Ω –≥–æ—Ä–æ–¥: {city.name}")
                except City.DoesNotExist:
                    print(f"   ‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: {city_name}")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")

if __name__ == '__main__':
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        active_categories = update_categories_for_master_cloud()
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∞—Ä—Ç–∏—Å—Ç–æ–≤
        create_sample_artists()
        
        print("\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1) 