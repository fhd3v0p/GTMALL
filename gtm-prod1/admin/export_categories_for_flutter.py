#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ JSON —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import os
import sys
import json
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gtm_admin_panel.settings')
django.setup()

from admin_panel.models import Category

def export_categories_for_flutter():
    """
    –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ JSON —Ñ–æ—Ä–º–∞—Ç –¥–ª—è Flutter
    """
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = Category.objects.all().order_by('type', 'name')
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø—É
    products = []
    services = []
    all_categories = []
    
    for category in categories:
        cat_data = {
            'id': category.id,
            'name': category.name,
            'type': category.type,
            'type_display': category.get_type_display(),
            'created_at': category.created_at.isoformat() if category.created_at else None
        }
        
        all_categories.append(cat_data)
        
        if category.type == 'product':
            products.append(cat_data)
        else:
            services.append(cat_data)
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ –≤ Flutter
    flutter_data = {
        'categories': [cat['name'] for cat in all_categories],
        'product_categories': [cat['name'] for cat in products],
        'service_categories': [cat['name'] for cat in services],
        'detailed_categories': {
            'products': products,
            'services': services,
            'all': all_categories
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON —Ñ–∞–π–ª
    output_file = 'categories_for_flutter.json'
    with open(output_file, 'w', encoding='utf-8') as f:
        json.dump(flutter_data, f, ensure_ascii=False, indent=2)
    
    print(f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–∞–π–ª: {output_file}")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(all_categories)}")
    print(f"   ‚Ä¢ –¢–æ–≤–∞—Ä—ã: {len(products)}")
    print(f"   ‚Ä¢ –£—Å–ª—É–≥–∏: {len(services)}")
    
    print(f"\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:")
    for cat in products:
        print(f"   ‚Ä¢ {cat['name']}")
    
    print(f"\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥:")
    for cat in services:
        print(f"   ‚Ä¢ {cat['name']}")
    
    # –°–æ–∑–¥–∞–µ–º Dart –∫–æ–¥ –¥–ª—è Flutter
    dart_code = generate_dart_code(flutter_data)
    dart_file = 'categories_dart.dart'
    with open(dart_file, 'w', encoding='utf-8') as f:
        f.write(dart_code)
    
    print(f"\nüìÅ Dart –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {dart_file}")
    
    return flutter_data

def generate_dart_code(data):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Dart –∫–æ–¥ –¥–ª—è Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    categories_list = ',\n    '.join([f"'{cat}'" for cat in data['categories']])
    product_categories_list = ',\n    '.join([f"'{cat}'" for cat in data['product_categories']])
    service_categories_list = ',\n    '.join([f"'{cat}'" for cat in data['service_categories']])
    
    dart_code = f'''// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
// –û–±–Ω–æ–≤–ª–µ–Ω: {django.utils.timezone.now().strftime('%Y-%m-%d %H:%M:%S')}

class MasterCloudCategories {{
  // –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  static const List<String> categories = [
    {categories_list}
  ];

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ (–¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ product screen)
  static const List<String> productCategories = [
    {product_categories_list}
  ];

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥ (–¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ master detail screen)
  static const List<String> serviceCategories = [
    {service_categories_list}
  ];
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–Ω–æ–π
  static bool isProductCategory(String category) {{
    return productCategories.contains(category);
  }}
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ª—É–≥–æ–π
  static bool isServiceCategory(String category) {{
    return serviceCategories.contains(category);
  }}
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  static String getCategoryType(String category) {{
    if (isProductCategory(category)) {{
      return 'product';
    }} else if (isServiceCategory(category)) {{
      return 'service';
    }}
    return 'unknown';
  }}
}}
'''
    
    return dart_code

if __name__ == "__main__":
    try:
        export_categories_for_flutter()
        print("\nüéâ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")
        sys.exit(1) 