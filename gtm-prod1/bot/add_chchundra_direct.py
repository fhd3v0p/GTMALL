#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞ –ß—É—á—É–Ω–¥—Ä–∞ —á–µ—Ä–µ–∑ API Supabase
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"

headers = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json',
    'Prefer': 'return=representation'
}

def get_city_id(city_name):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ ID –≥–æ—Ä–æ–¥–∞"""
    response = requests.get(
        f"{SUPABASE_URL}/rest/v1/cities?select=id&name=eq.{city_name}",
        headers=headers
    )
    if response.status_code == 200:
        data = response.json()
        return data[0]['id'] if data else None
    return None

def get_category_id(category_name):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    response = requests.get(
        f"{SUPABASE_URL}/rest/v1/categories?select=id&name=eq.{category_name}",
        headers=headers
    )
    if response.status_code == 200:
        data = response.json()
        return data[0]['id'] if data else None
    return None

def add_artist():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞ –ß—É—á—É–Ω–¥—Ä–∞"""
    
    # –ü–æ–ª—É—á–∞–µ–º ID –≥–æ—Ä–æ–¥–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    moscow_id = get_city_id("–ú–æ—Å–∫–≤–∞")
    tattoo_id = get_category_id("Tattoo")
    
    if not moscow_id or not tattoo_id:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã ID: moscow_id={moscow_id}, tattoo_id={tattoo_id}")
        return None
    
    print(f"‚úÖ ID –Ω–∞–π–¥–µ–Ω—ã: –ú–æ—Å–∫–≤–∞={moscow_id}, Tattoo={tattoo_id}")
    
    # –î–∞–Ω–Ω—ã–µ –∞—Ä—Ç–∏—Å—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã)
    artist_data = {
        "name": "–ß—É—á—É–Ω–¥—Ä–∞",
        "username": "chchundra_tattoo",
        "bio": "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∞—Ç—É-–º–∞—Å—Ç–µ—Ä —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —Å—Ç–∏–ª–µ–º. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —á–µ—Ä–Ω–æ-–±–µ–ª—ã—Ö —Ä–∞–±–æ—Ç–∞—Ö –∏ –º–∏–Ω–∏–º–∞–ª–∏–∑–º–µ.",
        "avatar_url": "https://rxmtovqxjsvogyywyrha.supabase.co/storage/v1/object/public/gtm-assets-public/artists/–ß—É—á—É–Ω–¥—Ä–∞/avatar.png",
        "city": "–ú–æ—Å–∫–≤–∞",
        "specialties": ["–ß–µ—Ä–Ω–æ-–±–µ–ª—ã–µ —Ç–∞—Ç—É", "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º", "–ì—Ä–∞—Ñ–∏–∫–∞", "–î–æ—Ç–≤–æ—Ä–∫"],
        "rating": 4.8,
        "telegram": "@chchndra_tattoo",
        "tiktok": "@chchundra_art",
        "is_active": True
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä—Ç–∏—Å—Ç–∞
    response = requests.post(
        f"{SUPABASE_URL}/rest/v1/artists",
        headers=headers,
        json=artist_data
    )
    
    if response.status_code == 201:
        artist = response.json()[0]
        print(f"‚úÖ –ê—Ä—Ç–∏—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω: ID={artist['id']}, –∏–º—è='{artist['name']}'")
        return artist
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞—Ä—Ç–∏—Å—Ç–∞: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        return None

def add_gallery(artist_id):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –¥–ª—è –∞—Ä—Ç–∏—Å—Ç–∞"""
    gallery_items = []
    
    for i in range(1, 11):  # 10 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        gallery_item = {
            "artist_id": artist_id,
            "image_url": f"https://rxmtovqxjsvogyywyrha.supabase.co/storage/v1/object/public/gtm-assets-public/artists/–ß—É—á—É–Ω–¥—Ä–∞/gallery{i}.jpg",
            "title": f"–†–∞–±–æ—Ç–∞ {i}",
            "display_order": i
        }
        gallery_items.append(gallery_item)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–µ—Ä–µ—é
    response = requests.post(
        f"{SUPABASE_URL}/rest/v1/artist_gallery",
        headers=headers,
        json=gallery_items
    )
    
    if response.status_code == 201:
        gallery = response.json()
        print(f"‚úÖ –ì–∞–ª–µ—Ä–µ—è –¥–æ–±–∞–≤–ª–µ–Ω–∞: {len(gallery)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        return gallery
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–∞–ª–µ—Ä–µ–∏: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        return None

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üé® –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞ '–ß—É—á—É–Ω–¥—Ä–∞' –≤ —Å–∏—Å—Ç–µ–º—É GTM")
    print("=" * 50)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä—Ç–∏—Å—Ç–∞
    artist = add_artist()
    if not artist:
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–µ—Ä–µ—é
    gallery = add_gallery(artist['id'])
    
    print("\n‚úÖ –ê—Ä—Ç–∏—Å—Ç '–ß—É—á—É–Ω–¥—Ä–∞' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É!")
    print(f"   ID: {artist['id']}")
    print(f"   –ò–º—è: {artist['name']}")
    print(f"   –ì–∞–ª–µ—Ä–µ—è: {len(gallery) if gallery else 0} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")

if __name__ == "__main__":
    main()