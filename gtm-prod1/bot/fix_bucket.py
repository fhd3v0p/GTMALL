#!/usr/bin/env python3
"""
GTM Supabase Bucket Fix
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∫–µ—Ç–æ–º —á–µ—Ä–µ–∑ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –±–∞–∫–µ—Ç–∞
"""
import os
import requests
import json
from dotenv import load_dotenv

load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = os.getenv('SUPABASE_URL')
SUPABASE_SERVICE_ROLE_KEY = os.getenv('SUPABASE_SERVICE_ROLE_KEY')
SUPABASE_STORAGE_BUCKET = os.getenv('SUPABASE_STORAGE_BUCKET', 'gtm-assets')

def fix_bucket_issue():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∫–µ—Ç–æ–º Supabase...")
    print(f"URL: {SUPABASE_URL}")
    print(f"Bucket: {SUPABASE_STORAGE_BUCKET}")
    
    # Headers –¥–ª—è service role
    service_headers = {
        'apikey': SUPABASE_SERVICE_ROLE_KEY,
        'Authorization': f'Bearer {SUPABASE_SERVICE_ROLE_KEY}',
        'Content-Type': 'application/json'
    }
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–∫–µ—Ç
    print(f"\nüìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–∫–µ—Ç–∞ '{SUPABASE_STORAGE_BUCKET}'")
    try:
        response = requests.get(f'{SUPABASE_URL}/storage/v1/bucket/{SUPABASE_STORAGE_BUCKET}', headers=service_headers)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            bucket_info = response.json()
            print(f"‚úÖ –ë–∞–∫–µ—Ç –Ω–∞–π–¥–µ–Ω: {bucket_info.get('name')}")
            print(f"  Public: {bucket_info.get('public')}")
            
            if bucket_info.get('public'):
                print("‚úÖ –ë–∞–∫–µ—Ç —É–∂–µ –ø—É–±–ª–∏—á–Ω—ã–π!")
                return True
            else:
                print("‚ùå –ë–∞–∫–µ—Ç –Ω–µ –ø—É–±–ª–∏—á–Ω—ã–π")
        else:
            print(f"‚ùå –ë–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {response.text[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—É–±–ª–∏—á–Ω—ã–π –±–∞–∫–µ—Ç
    print(f"\nüÜï –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –±–∞–∫–µ—Ç–∞")
    new_bucket_name = f"{SUPABASE_STORAGE_BUCKET}-public"
    
    try:
        create_data = {
            'name': new_bucket_name,
            'public': True
        }
        
        response = requests.post(
            f'{SUPABASE_URL}/storage/v1/bucket',
            headers=service_headers,
            json=create_data
        )
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            print(f"‚úÖ –ù–æ–≤—ã–π –ø—É–±–ª–∏—á–Ω—ã–π –±–∞–∫–µ—Ç '{new_bucket_name}' —Å–æ–∑–¥–∞–Ω!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.text[:200]}...")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –®–∞–≥ 3: –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –±–∞–∫–µ—Ç–∞ –≤ –Ω–æ–≤—ã–π
    print(f"\nüìÅ –®–∞–≥ 3: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –Ω–æ–≤—ã–π –±–∞–∫–µ—Ç")
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –±–∞–∫–µ—Ç–∞
        response = requests.get(f'{SUPABASE_URL}/storage/v1/object/list/{SUPABASE_STORAGE_BUCKET}', headers=service_headers)
        if response.status_code == 200:
            files = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {len(files)}")
            
            for file in files[:3]:  # –ö–æ–ø–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
                file_name = file.get('name')
                print(f"  –ö–æ–ø–∏—Ä—É–µ–º: {file_name}")
                
                # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –±–∞–∫–µ—Ç–∞
                download_url = f'{SUPABASE_URL}/storage/v1/object/{SUPABASE_STORAGE_BUCKET}/{file_name}'
                file_response = requests.get(download_url, headers=service_headers)
                
                if file_response.status_code == 200:
                    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ –Ω–æ–≤—ã–π –±–∞–∫–µ—Ç
                    upload_url = f'{SUPABASE_URL}/storage/v1/object/{new_bucket_name}/{file_name}'
                    files_data = {'file': (file_name, file_response.content, 'application/octet-stream')}
                    
                    upload_response = requests.post(upload_url, headers=service_headers, files=files_data)
                    if upload_response.status_code == 200:
                        print(f"    ‚úÖ {file_name} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω")
                    else:
                        print(f"    ‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è {file_name}")
                else:
                    print(f"    ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å {file_name}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤: {response.text[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    # –®–∞–≥ 4: –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print(f"\n‚öôÔ∏è –®–∞–≥ 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print(f"–ù–æ–≤—ã–π –±–∞–∫–µ—Ç: {new_bucket_name}")
    print(f"–û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é SUPABASE_STORAGE_BUCKET –≤ .env —Ñ–∞–π–ª–µ:")
    print(f"SUPABASE_STORAGE_BUCKET={new_bucket_name}")
    
    # –®–∞–≥ 5: –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ –±–∞–∫–µ—Ç–∞
    print(f"\nüß™ –®–∞–≥ 5: –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ –±–∞–∫–µ—Ç–∞")
    try:
        response = requests.get(f'{SUPABASE_URL}/storage/v1/bucket/{new_bucket_name}', headers=service_headers)
        if response.status_code == 200:
            bucket_info = response.json()
            print(f"‚úÖ –ù–æ–≤—ã–π –±–∞–∫–µ—Ç: {bucket_info.get('name')}")
            print(f"‚úÖ Public: {bucket_info.get('public')}")
            
            if bucket_info.get('public'):
                print("üéâ –ù–æ–≤—ã–π –±–∞–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–∞–∫ –ø—É–±–ª–∏—á–Ω—ã–π!")
                return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ –±–∞–∫–µ—Ç–∞: {response.text[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def show_manual_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–∞–∫–µ—Ç–∞:")
    print("=" * 50)
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard:")
    print(f"   https://supabase.com/dashboard/project/rxmtovqxjsvogyywyrha")
    print("\n2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Storage ‚Üí Buckets")
    print("\n3. –ù–∞–π–¥–∏—Ç–µ –±–∞–∫–µ—Ç 'gtm-assets'")
    print("\n4. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –±–∞–∫–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("\n5. –í–∫–ª—é—á–∏—Ç–µ –æ–ø—Ü–∏—é 'Public bucket'")
    print("\n6. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è")
    print("\n7. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –≤ –±–∞–∫–µ—Ç:")
    print("   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É –±–∞–∫–µ—Ç–∞")
    print("   - –ù–∞–∂–º–∏—Ç–µ 'Upload file'")
    print("   - –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ –ø–∞–ø–∫–∏ assets/")

if __name__ == "__main__":
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∫–µ—Ç–æ–º Supabase")
    print("=" * 50)
    
    if fix_bucket_issue():
        print("\n‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    else:
        print("\n‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!")
        show_manual_instructions() 