#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase Storage bucket gtm-assets-public
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"
BUCKET_NAME = "gtm-assets-public"

headers = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json'
}

def check_bucket_exists():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è bucket"""
    try:
        response = requests.get(
            f"{SUPABASE_URL}/storage/v1/bucket",
            headers=headers
        )
        
        if response.status_code == 200:
            buckets = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ buckets: {len(buckets)}")
            
            for bucket in buckets:
                print(f"   - {bucket['name']} (public: {bucket.get('public', False)})")
                if bucket['name'] == BUCKET_NAME:
                    print(f"     ‚úÖ Bucket {BUCKET_NAME} –Ω–∞–π–¥–µ–Ω!")
                    return bucket
            
            print(f"‚ùå Bucket {BUCKET_NAME} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è buckets: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ buckets: {e}")
        return None

def list_bucket_contents(path=""):
    """–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ bucket"""
    try:
        url = f"{SUPABASE_URL}/storage/v1/object/list/{BUCKET_NAME}"
        if path:
            url += f"?prefix={path}/"
        
        response = requests.post(
            url,
            headers=headers,
            json={"limit": 100, "offset": 0, "sortBy": {"column": "name", "order": "asc"}}
        )
        
        if response.status_code == 200:
            files = response.json()
            print(f"üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ {BUCKET_NAME}/{path}: {len(files)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
            for file in files[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                print(f"   - {file['name']} ({file.get('metadata', {}).get('size', 'N/A')} bytes)")
                
            if len(files) > 10:
                print(f"   ... –∏ –µ—â–µ {len(files) - 10} —Ñ–∞–π–ª–æ–≤")
                
            return files
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return []
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {e}")
        return []

def check_chchundra_folder():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ –ß—É—á—É–Ω–¥—Ä–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ artists/–ß—É—á—É–Ω–¥—Ä–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É artists
    artists_files = list_bucket_contents("artists")
    
    # –ò—â–µ–º –ø–∞–ø–∫—É –ß—É—á—É–Ω–¥—Ä–∞
    chchundra_found = False
    for file in artists_files:
        if "–ß—É—á—É–Ω–¥—Ä–∞" in file['name'] or "chchundra" in file['name'].lower():
            chchundra_found = True
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω: {file['name']}")
    
    if not chchundra_found:
        print("   ‚ùå –ü–∞–ø–∫–∞ –ß—É—á—É–Ω–¥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("   üí° –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É artists/–ß—É—á—É–Ω–¥—Ä–∞/ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã")
        
    return chchundra_found

def test_public_url():
    """–¢–µ—Å—Ç –ø—É–±–ª–∏—á–Ω–æ–≥–æ URL"""
    test_url = f"{SUPABASE_URL}/storage/v1/object/public/{BUCKET_NAME}/artists/–ß—É—á—É–Ω–¥—Ä–∞/avatar.png"
    
    try:
        response = requests.head(test_url)
        print(f"\nüåê –¢–µ—Å—Ç –ø—É–±–ª–∏—á–Ω–æ–≥–æ URL:")
        print(f"   URL: {test_url}")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("   ‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print("   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL: {e}")
        return False

def main():
    print("ü™£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase Storage")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º bucket
    bucket = check_bucket_exists()
    
    if bucket:
        print(f"\nüìã –î–µ—Ç–∞–ª–∏ bucket {BUCKET_NAME}:")
        print(f"   ID: {bucket.get('id')}")
        print(f"   Public: {bucket.get('public', False)}")
        print(f"   Created: {bucket.get('created_at', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        print(f"\nüìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ bucket:")
        list_bucket_contents()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É –ß—É—á—É–Ω–¥—Ä–∞
        check_chchundra_folder()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
        test_public_url()
        
    else:
        print(f"\n‚ùå Bucket {BUCKET_NAME} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - Bucket –Ω–µ —Å–æ–∑–¥–∞–Ω")
        print("   - –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
        print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è bucket")

if __name__ == "__main__":
    main()