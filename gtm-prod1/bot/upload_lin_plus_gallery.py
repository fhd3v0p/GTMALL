#!/usr/bin/env python3
"""
–ó–∞–≥—Ä—É–∑–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ Lin++ –≤ Supabase Storage –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ artist_gallery
"""

import os
import requests
import json
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"
SUPABASE_SERVICE_ROLE_KEY = os.getenv('SUPABASE_SERVICE_ROLE_KEY')

# Headers
anon_headers = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json',
    'Prefer': 'return=representation'
}

service_headers = {
    'apikey': SUPABASE_SERVICE_ROLE_KEY,
    'Authorization': f'Bearer {SUPABASE_SERVICE_ROLE_KEY}',
    'Content-Type': 'application/json'
}

def upload_gallery_files():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –≥–∞–ª–µ—Ä–µ–∏ Lin++ –≤ Supabase Storage"""
    print("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –≥–∞–ª–µ—Ä–µ–∏ Lin++ –≤ Supabase Storage...")
    
    # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –≥–∞–ª–µ—Ä–µ–µ–π Lin++
    gallery_path = Path("../assets/artists/Lin++")
    
    if not gallery_path.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {gallery_path}")
        return False
    
    uploaded_files = []
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º gallery1.jpg - gallery8.jpg
    for i in range(1, 9):
        filename = f"gallery{i}.jpg"
        local_file = gallery_path / filename
        storage_path = f"artists/Lin++/{filename}"
        
        if not local_file.exists():
            print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {local_file}")
            continue
        
        print(f"üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º: {filename} ‚Üí {storage_path}")
        
        try:
            with open(local_file, 'rb') as file:
                files_data = {'file': (filename, file, 'image/jpeg')}
                
                upload_url = f'{SUPABASE_URL}/storage/v1/object/gtm-assets-public/{storage_path}'
                response = requests.post(upload_url, headers=service_headers, files=files_data)
                
                if response.status_code == 200:
                    print(f"  ‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
                    uploaded_files.append({
                        'filename': filename,
                        'storage_path': storage_path,
                        'public_url': f"{SUPABASE_URL}/storage/v1/object/public/gtm-assets-public/{storage_path}"
                    })
                else:
                    print(f"  ‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text[:100]}...")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print(f"\nüìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(uploaded_files)}/8")
    return uploaded_files

def add_gallery_to_database(uploaded_files):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≥–∞–ª–µ—Ä–µ–∏ –≤ —Ç–∞–±–ª–∏—Ü—É artist_gallery"""
    print("\nüñºÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    
    artist_id = 7  # ID –∞—Ä—Ç–∏—Å—Ç–∞ Lin++
    gallery_items = []
    
    for i, file_info in enumerate(uploaded_files, 1):
        gallery_item = {
            "artist_id": artist_id,
            "image_url": file_info['public_url'],
            "title": f"–†–∞–±–æ—Ç–∞ {i}"
        }
        gallery_items.append(gallery_item)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–µ—Ä–µ—é –≤ –±–∞–∑—É
    response = requests.post(
        f"{SUPABASE_URL}/rest/v1/artist_gallery",
        headers=anon_headers,
        json=gallery_items
    )
    
    if response.status_code == 201:
        gallery = response.json()
        print(f"‚úÖ –ì–∞–ª–µ—Ä–µ—è –¥–æ–±–∞–≤–ª–µ–Ω–∞: {len(gallery)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        return gallery
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–∞–ª–µ—Ä–µ–∏: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        return None

def check_existing_gallery():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≥–∞–ª–µ—Ä–µ–∏ –¥–ª—è Lin++"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –≥–∞–ª–µ—Ä–µ–∏ –¥–ª—è Lin++...")
    
    response = requests.get(
        f"{SUPABASE_URL}/rest/v1/artist_gallery?artist_id=eq.7",
        headers=anon_headers
    )
    
    if response.status_code == 200:
        existing_gallery = response.json()
        if existing_gallery:
            print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {len(existing_gallery)} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –≥–∞–ª–µ—Ä–µ–∏")
            return existing_gallery
        else:
            print("‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return []
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–∞–ª–µ—Ä–µ–∏: {response.status_code}")
        return []

def main():
    print("üñºÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –≥–∞–ª–µ—Ä–µ–∏ Lin++ –≤ Supabase")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥–∞–ª–µ—Ä–µ—é
    existing_gallery = check_existing_gallery()
    
    if existing_gallery:
        print(f"\n‚ö†Ô∏è –£ Lin++ —É–∂–µ –µ—Å—Ç—å {len(existing_gallery)} –∑–∞–ø–∏—Å–µ–π –≤ –≥–∞–ª–µ—Ä–µ–µ")
        print("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏? (y/n): ", end="")
        # –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        print("y")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –≤ Storage
    uploaded_files = upload_gallery_files()
    
    if not uploaded_files:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    gallery = add_gallery_to_database(uploaded_files)
    
    if gallery:
        print(f"\n‚úÖ –ì–∞–ª–µ—Ä–µ—è Lin++ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
        print(f"   –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(uploaded_files)}")
        print(f"   –î–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(gallery)}")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≥–∞–ª–µ—Ä–µ—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")

if __name__ == "__main__":
    main() 