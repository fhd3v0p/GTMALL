#!/usr/bin/env python3
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∫–µ—Ç–∞ gtm-assets —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"
BUCKET_NAME = "gtm-assets"

headers = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json'
}

def create_gtm_assets_bucket():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∫–µ—Ç–∞ gtm-assets"""
    print("üÜï –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∫–µ—Ç–∞ gtm-assets...")
    
    bucket_data = {
        "id": BUCKET_NAME,
        "name": BUCKET_NAME,
        "public": True,
        "file_size_limit": 52428800,  # 50MB
        "allowed_mime_types": ["image/jpeg", "image/png", "image/webp", "image/gif"]
    }
    
    response = requests.post(
        f"{SUPABASE_URL}/storage/v1/bucket",
        headers=headers,
        json=bucket_data
    )
    
    if response.status_code == 200:
        print(f"‚úÖ –ë–∞–∫–µ—Ç {BUCKET_NAME} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∫–µ—Ç–∞: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        return False

def check_bucket_exists():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∫–µ—Ç–∞"""
    try:
        response = requests.get(
            f"{SUPABASE_URL}/storage/v1/bucket",
            headers=headers
        )
        
        if response.status_code == 200:
            buckets = response.json()
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ buckets: {len(buckets)}")
            
            for bucket in buckets:
                print(f"   - {bucket['name']} (public: {bucket.get('public', False)})")
                if bucket['name'] == BUCKET_NAME:
                    print(f"     ‚úÖ –ë–∞–∫–µ—Ç {BUCKET_NAME} –Ω–∞–π–¥–µ–Ω!")
                    return bucket
            
            print(f"‚ùå –ë–∞–∫–µ—Ç {BUCKET_NAME} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è buckets: {response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ buckets: {e}")
        return None

def create_directory_structure():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    
    directories = [
        "artists",
        "avatars", 
        "banners",
        "gtm-merch",
        "products"
    ]
    
    created_count = 0
    for directory in directories:
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        dummy_file_path = f"{directory}/.keep"
        dummy_data = ""
        
        response = requests.post(
            f"{SUPABASE_URL}/storage/v1/object/{BUCKET_NAME}/{dummy_file_path}",
            headers=headers,
            data=dummy_data
        )
        
        if response.status_code == 200:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")
            created_count += 1
        else:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {directory}: {response.status_code}")
    
    print(f"\nüìä –°–æ–∑–¥–∞–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: {created_count}/{len(directories)}")
    return created_count == len(directories)

def main():
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∫–µ—Ç–∞ gtm-assets")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –±–∞–∫–µ—Ç
    existing_bucket = check_bucket_exists()
    
    if existing_bucket:
        print(f"\n‚úÖ –ë–∞–∫–µ—Ç {BUCKET_NAME} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        if existing_bucket.get('public'):
            print("‚úÖ –ë–∞–∫–µ—Ç —É–∂–µ –ø—É–±–ª–∏—á–Ω—ã–π!")
        else:
            print("‚ö†Ô∏è –ë–∞–∫–µ—Ç –Ω–µ –ø—É–±–ª–∏—á–Ω—ã–π, –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å...")
    else:
        # –°–æ–∑–¥–∞–µ–º –±–∞–∫–µ—Ç
        if create_gtm_assets_bucket():
            print("‚úÖ –ë–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–∞–∫–µ—Ç")
            return
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    if create_directory_structure():
        print("\n‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–∞!")
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∫–µ—Ç–∞ gtm-assets:")
        print("   ‚îú‚îÄ‚îÄ artists/     (–∞—Ä—Ç–∏—Å—Ç—ã)")
        print("   ‚îú‚îÄ‚îÄ avatars/     (–∞–≤–∞—Ç–∞—Ä—ã)")
        print("   ‚îú‚îÄ‚îÄ banners/     (–±–∞–Ω–Ω–µ—Ä—ã)")
        print("   ‚îú‚îÄ‚îÄ gtm-merch/   (–º–µ—Ä—á)")
        print("   ‚îî‚îÄ‚îÄ products/    (–ø—Ä–æ–¥—É–∫—Ç—ã)")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π")

if __name__ == "__main__":
    main() 