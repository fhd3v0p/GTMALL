#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ MasterCloudCategories –≤ Supabase
"""

import requests

# Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"

def get_headers():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤"""
    return {
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
        'Content-Type': 'application/json',
        'Prefer': 'return=minimal'
    }

def get_existing_categories():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    url = f"{SUPABASE_URL}/rest/v1/categories?select=name"
    headers = get_headers()
    
    response = requests.get(url, headers=headers)
    
    if response.status_code == 200:
        categories = response.json()
        return [cat['name'] for cat in categories]
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {response.status_code}")
        return []

def add_category(name, description, category_type):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é"""
    url = f"{SUPABASE_URL}/rest/v1/categories"
    headers = get_headers()
    
    category_data = {
        "name": name,
        "description": description,
        "type": category_type,
        "is_active": True
    }
    
    response = requests.post(url, json=category_data, headers=headers)
    
    if response.status_code in [200, 201]:
        print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è {name} –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {name}: {response.status_code} - {response.text}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ MasterCloudCategories...")
    
    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ MasterCloudCategories
    master_cloud_categories = [
        # –¢–æ–≤–∞—Ä—ã (product)
        {'name': 'GTM BRAND', 'description': '–ë—Ä–µ–Ω–¥–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã GTM', 'type': 'product'},
        {'name': 'Jewelry', 'description': '–£–∫—Ä–∞—à–µ–Ω–∏—è', 'type': 'product'},
        {'name': 'Custom', 'description': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã', 'type': 'product'},
        {'name': 'Second', 'description': '–í—Ç–æ—Ä—ã–µ —Ä—É–∫–∏', 'type': 'product'},
        
        # –£—Å–ª—É–≥–∏ (service)
        {'name': 'Tattoo', 'description': '–¢–∞—Ç—É–∏—Ä–æ–≤–∫–∏', 'type': 'service'},
        {'name': 'Hair', 'description': '–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏', 'type': 'service'},
        {'name': 'Nails', 'description': '–ú–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä', 'type': 'service'},
        {'name': 'Piercing', 'description': '–ü–∏—Ä—Å–∏–Ω–≥', 'type': 'service'},
    ]
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    existing_categories = get_existing_categories()
    print(f"üìä –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {existing_categories}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for category in master_cloud_categories:
        if category['name'] not in existing_categories:
            add_category(category['name'], category['description'], category['type'])
        else:
            print(f"‚úì –ö–∞—Ç–µ–≥–æ—Ä–∏—è {category['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    print("\n‚úÖ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ MasterCloudCategories –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ Supabase!")

if __name__ == "__main__":
    main()