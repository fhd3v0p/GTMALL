#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM - —É–±–∏—Ä–∞–µ–º –∏–∑ Tattoo, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ GTM BRAND
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"

headers = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json',
    'Prefer': 'return=representation'
}

def get_category_id(category_name):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∏–º–µ–Ω–∏"""
    response = requests.get(
        f"{SUPABASE_URL}/rest/v1/categories?name=eq.{category_name}&select=id",
        headers=headers
    )
    
    if response.status_code == 200:
        categories = response.json()
        if categories:
            return categories[0]['id']
    return None

def get_artist_categories(artist_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞"""
    response = requests.get(
        f"{SUPABASE_URL}/rest/v1/artist_categories?artist_id=eq.{artist_id}&select=category_id",
        headers=headers
    )
    
    if response.status_code == 200:
        return response.json()
    return []

def remove_artist_from_category(artist_id, category_id):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    response = requests.delete(
        f"{SUPABASE_URL}/rest/v1/artist_categories?artist_id=eq.{artist_id}&category_id=eq.{category_id}",
        headers=headers
    )
    
    return response.status_code == 200

def add_artist_to_category(artist_id, category_id):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é"""
    artist_category_data = {
        "artist_id": artist_id,
        "category_id": category_id
    }
    
    response = requests.post(
        f"{SUPABASE_URL}/rest/v1/artist_categories",
        headers=headers,
        json=artist_category_data
    )
    
    return response.status_code in [200, 201]

def fix_gtm_artist_categories():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM...")
    
    artist_id = 14  # ID –∞—Ä—Ç–∏—Å—Ç–∞ GTM
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    tattoo_category_id = get_category_id("Tattoo")
    gtm_brand_category_id = get_category_id("GTM BRAND")
    
    print(f"üìã ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Tattoo: {tattoo_category_id}")
    print(f"üìã ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ GTM BRAND: {gtm_brand_category_id}")
    
    if not tattoo_category_id:
        print("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è Tattoo –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    if not gtm_brand_category_id:
        print("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è GTM BRAND –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞—Ä—Ç–∏—Å—Ç–∞ GTM
    current_categories = get_artist_categories(artist_id)
    print(f"üìä –¢–µ–∫—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞—Ä—Ç–∏—Å—Ç–∞ GTM: {len(current_categories)}")
    
    # –£–¥–∞–ª—è–µ–º –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Tattoo
    if tattoo_category_id in [cat['category_id'] for cat in current_categories]:
        print(f"üóëÔ∏è –£–¥–∞–ª—è–µ–º GTM –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Tattoo...")
        if remove_artist_from_category(artist_id, tattoo_category_id):
            print("‚úÖ GTM —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Tattoo")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Tattoo")
    else:
        print("‚ÑπÔ∏è GTM —É–∂–µ –Ω–µ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Tattoo")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é GTM BRAND (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω)
    if gtm_brand_category_id not in [cat['category_id'] for cat in current_categories]:
        print(f"‚ûï –î–æ–±–∞–≤–ª—è–µ–º GTM –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é GTM BRAND...")
        if add_artist_to_category(artist_id, gtm_brand_category_id):
            print("‚úÖ GTM –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é GTM BRAND")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é GTM BRAND")
    else:
        print("‚ÑπÔ∏è GTM —É–∂–µ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ GTM BRAND")
    
    return True

def check_artist_categories_after_fix():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    artist_id = 14
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞—Ä—Ç–∏—Å—Ç–∞ GTM —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    response = requests.get(
        f"{SUPABASE_URL}/rest/v1/artist_categories?artist_id=eq.{artist_id}&select=category_id",
        headers=headers
    )
    
    if response.status_code == 200:
        artist_categories = response.json()
        print(f"üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–π —É –∞—Ä—Ç–∏—Å—Ç–∞ GTM: {len(artist_categories)}")
        
        for relation in artist_categories:
            category_id = relation['category_id']
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            cat_response = requests.get(
                f"{SUPABASE_URL}/rest/v1/categories?id=eq.{category_id}&select=name",
                headers=headers
            )
            if cat_response.status_code == 200:
                categories = cat_response.json()
                if categories:
                    print(f"  ‚Ä¢ {categories[0]['name']} (ID: {category_id})")
        
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞: {response.status_code}")
        return False

def main():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM")
    print("=" * 50)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    fix_gtm_artist_categories()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    check_artist_categories_after_fix()
    
    print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π GTM –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 