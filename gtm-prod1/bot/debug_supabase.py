#!/usr/bin/env python3
"""
GTM Supabase Debug Script
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
"""
import os
import requests
import json
from dotenv import load_dotenv

load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SUPABASE_URL = os.getenv('SUPABASE_URL')
SUPABASE_ANON_KEY = os.getenv('SUPABASE_ANON_KEY')
SUPABASE_SERVICE_ROLE_KEY = os.getenv('SUPABASE_SERVICE_ROLE_KEY')

def test_supabase_connection():
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
    print(f"URL: {SUPABASE_URL}")
    print(f"Anon Key: {SUPABASE_ANON_KEY[:20]}...")
    print(f"Service Key: {SUPABASE_SERVICE_ROLE_KEY[:20]}...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å anon key
    print("\nüì° –¢–µ—Å—Ç 1: API —Å anon key")
    headers = {
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
        'Content-Type': 'application/json'
    }
    
    try:
        response = requests.get(f'{SUPABASE_URL}/rest/v1/', headers=headers)
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã users —Å anon key
    print("\nüë• –¢–µ—Å—Ç 2: –¢–∞–±–ª–∏—Ü–∞ users (anon key)")
    try:
        response = requests.get(f'{SUPABASE_URL}/rest/v1/users?select=*&limit=1', headers=headers)
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å service role key
    print("\nüîê –¢–µ—Å—Ç 3: API —Å service role key")
    service_headers = {
        'apikey': SUPABASE_SERVICE_ROLE_KEY,
        'Authorization': f'Bearer {SUPABASE_SERVICE_ROLE_KEY}',
        'Content-Type': 'application/json'
    }
    
    try:
        response = requests.get(f'{SUPABASE_URL}/rest/v1/users?select=*&limit=1', headers=service_headers)
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ Storage
    print("\nüì¶ –¢–µ—Å—Ç 4: Storage bucket")
    try:
        response = requests.get(f'{SUPABASE_URL}/storage/v1/bucket/list', headers=service_headers)
        print(f"Status: {response.status_code}")
        print(f"Response: {response.text[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_supabase_connection() 