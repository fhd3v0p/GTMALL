#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM –≤ —Ç–∞–±–ª–∏—Ü–µ artist_categories
"""
import requests
import json

# Supabase Configuration
SUPABASE_URL = 'https://rxmtovqxjsvogyywyrha.supabase.co'
SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE'

def check_gtm_categories():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM...")
    
    # SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM
    url = f'{SUPABASE_URL}/rest/v1/rpc/get_artist_categories'
    headers = {
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
        'Content-Type': 'application/json'
    }
    
    data = {
        'artist_id': 14
    }
    
    try:
        response = requests.post(url, headers=headers, json=data)
        response.raise_for_status()
        
        categories = response.json()
        if categories:
            print(f"üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞—Ä—Ç–∏—Å—Ç–∞ GTM (ID: 14):")
            for category in categories:
                print(f"   ‚Ä¢ {category['name']} (ID: {category['id']})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ GTM BRAND
            category_names = [cat['name'] for cat in categories]
            if len(category_names) == 1 and 'GTM BRAND' in category_names:
                print("‚úÖ GTM –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ GTM BRAND")
                return True
            else:
                print("‚ùå GTM –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö")
                return False
        else:
            print("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è GTM –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
        return False

def check_artist_categories_table():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã artist_categories –¥–ª—è GTM"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã artist_categories...")
    
    url = f'{SUPABASE_URL}/rest/v1/artist_categories'
    headers = {
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
        'Content-Type': 'application/json'
    }
    
    params = {
        'artist_id': 'eq.14',
        'select': 'artist_id,category_id'
    }
    
    try:
        response = requests.get(url, headers=headers, params=params)
        response.raise_for_status()
        
        data = response.json()
        if data:
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Å–≤—è–∑–µ–π –≤ artist_categories –¥–ª—è GTM: {len(data)}")
            for record in data:
                print(f"   Artist ID: {record['artist_id']}, Category ID: {record['category_id']}")
            return data
        else:
            print("‚ùå –°–≤—è–∑–µ–π –≤ artist_categories –¥–ª—è GTM –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return []
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ artist_categories: {e}")
        return []

def get_category_name(category_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ ID"""
    url = f'{SUPABASE_URL}/rest/v1/categories'
    headers = {
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
        'Content-Type': 'application/json'
    }
    
    params = {
        'id': f'eq.{category_id}',
        'select': 'id,name'
    }
    
    try:
        response = requests.get(url, headers=headers, params=params)
        response.raise_for_status()
        
        data = response.json()
        if data:
            return data[0]['name']
        else:
            return f"Unknown (ID: {category_id})"
            
    except Exception as e:
        return f"Error (ID: {category_id})"

if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞—Ä—Ç–∏—Å—Ç–∞ GTM")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ RPC —Ñ—É–Ω–∫—Ü–∏—é
    check_gtm_categories()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É artist_categories
    records = check_artist_categories_table()
    
    if records:
        print("\nüìã –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö:")
        for record in records:
            category_name = get_category_name(record['category_id'])
            print(f"   Category ID {record['category_id']}: {category_name}")
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!") 