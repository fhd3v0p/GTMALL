#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö GTM Bot
"""

import os
import psycopg2
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DATABASE_URL = os.getenv('DATABASE_URL', 'postgresql://gtm_user:gtm_secure_password_2024@postgres:5432/gtm_db')

def update_database():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        
        print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –±–∏–ª–µ—Ç–∞ –∑–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        cursor.execute("""
            ALTER TABLE users ADD COLUMN IF NOT EXISTS has_subscription_ticket BOOLEAN DEFAULT FALSE
        """)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ has_subscription_ticket")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("""
            ALTER TABLE users ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        """)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ created_at")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
        cursor.execute("""
            ALTER TABLE users ADD COLUMN IF NOT EXISTS referral_code VARCHAR(20) UNIQUE
        """)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ referral_code")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        cursor.execute("""
            UPDATE users 
            SET has_subscription_ticket = TRUE 
            WHERE tickets_count > 0 AND has_subscription_ticket IS NULL
        """)
        print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏")
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute("""
            CREATE INDEX IF NOT EXISTS idx_users_has_subscription_ticket ON users(has_subscription_ticket)
        """)
        cursor.execute("""
            CREATE INDEX IF NOT EXISTS idx_users_created_at ON users(created_at)
        """)
        cursor.execute("""
            CREATE INDEX IF NOT EXISTS idx_users_referral_code ON users(referral_code)
        """)
        print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–µ–∫—Å—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("""
            SELECT column_name, data_type, is_nullable, column_default 
            FROM information_schema.columns 
            WHERE table_name = 'users' 
            ORDER BY ordinal_position
        """)
        
        columns = cursor.fetchall()
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:")
        for column in columns:
            print(f"  ‚Ä¢ {column[0]} ({column[1]}) - {'NULL' if column[2] == 'YES' else 'NOT NULL'}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        cursor.close()
        conn.close()
        
        print("\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        if 'conn' in locals():
            conn.rollback()
            conn.close()

if __name__ == "__main__":
    update_database() 