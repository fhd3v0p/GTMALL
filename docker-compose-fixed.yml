version: '3.8'

services:
  # ============================================================================
  # NGINX REVERSE PROXY
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: gtm_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /root/gtmall/ssl:/etc/nginx/ssl:ro
      - /root/gtmall/web:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - gtm_network

  # ============================================================================
  # API SERVER (Rating API)
  # ============================================================================
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: gtm_api
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DOMAIN=${DOMAIN}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_STORAGE_BUCKET=${SUPABASE_STORAGE_BUCKET}
      - API_PORT=5000
      - API_HOST=0.0.0.0
      - FLASK_ENV=${FLASK_ENV}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./logs:/app/logs
    networks:
      - gtm_network

  # ============================================================================
  # TELEGRAM BOT
  # ============================================================================
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: gtm_bot
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DOMAIN=${DOMAIN}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_STORAGE_BUCKET=${SUPABASE_STORAGE_BUCKET}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./logs:/app/logs
    networks:
      - gtm_network

# ============================================================================
# NETWORKS
# ============================================================================
networks:
  gtm_network:
    driver: bridge 