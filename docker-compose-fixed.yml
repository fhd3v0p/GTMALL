version: '3.8'

services:
  # ============================================================================
  # TRAEFIK REVERSE PROXY
  # ============================================================================
  traefik:
    image: traefik:v2.10
    container_name: gtm_traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/config:/etc/traefik/config:ro
      - /root/gtmall/ssl:/etc/traefik/ssl:ro
      - traefik_acme:/etc/traefik/acme
      - traefik_logs:/var/log/traefik
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.gtm.baby`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_AUTH}"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  # ============================================================================
  # API SERVER (Rating API)
  # ============================================================================
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: gtm_api
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DOMAIN=${DOMAIN}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_STORAGE_BUCKET=${SUPABASE_STORAGE_BUCKET}
      - API_PORT=5000
      - API_HOST=0.0.0.0
      - FLASK_ENV=${FLASK_ENV}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./logs:/app/logs
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.gtm.baby`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.middlewares=secure-headers,cors,rate-limit"
      - "traefik.http.services.api.loadbalancer.server.port=5000"

  # ============================================================================
  # TELEGRAM BOT
  # ============================================================================
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: gtm_bot
    restart: unless-stopped
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DOMAIN=${DOMAIN}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_STORAGE_BUCKET=${SUPABASE_STORAGE_BUCKET}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./logs:/app/logs
    networks:
      - traefik

  # ============================================================================
  # WEB SERVER (Static Files)
  # ============================================================================
  web:
    image: nginx:alpine
    container_name: gtm_web
    restart: unless-stopped
    volumes:
      - /root/gtmall/web:/usr/share/nginx/html:ro
      - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`gtm.baby`) || Host(`www.gtm.baby`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.middlewares=secure-headers"
      - "traefik.http.services.web.loadbalancer.server.port=80"

# ============================================================================
# NETWORKS
# ============================================================================
networks:
  traefik:
    driver: bridge

# ============================================================================
# VOLUMES
# ============================================================================
volumes:
  traefik_acme:
    driver: local
  traefik_logs:
    driver: local 