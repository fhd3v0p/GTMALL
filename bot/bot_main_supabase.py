#!/usr/bin/env python3
"""
GTM Telegram Bot —Å Supabase –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–ª–µ—Ç–∞–º–∏ —á–µ—Ä–µ–∑ Supabase
"""

import os
import logging
import asyncio
import random
import string
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Supabase –∫–ª–∏–µ–Ω—Ç
from supabase_client import supabase_client
from supabase_config import validate_supabase_config

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '7533650686:AAEU4_nJZHGfzOv9XL4m_fDVt0q3dMDPQX8')
TELEGRAM_FOLDER_LINK = os.getenv('TELEGRAM_FOLDER_LINK', 'https://t.me/addlist/qRX5VmLZF7E3M2U9')
WEBAPP_URL = os.getenv('WEBAPP_URL', 'https://gtm.baby')

# –ö–∞–Ω–∞–ª—ã –ø–æ–¥–ø–∏—Å–∫–∏ (9 –∫–∞–Ω–∞–ª–æ–≤)
SUBSCRIPTION_CHANNELS = [
    {'channel_id': -1002088959587, 'channel_username': 'rejmenyavseryoz', 'channel_name': '–†–µ–∂—å –º–µ–Ω—è –≤—Å–µ—Ä—å—ë–∑'},
    {'channel_id': -1001971855072, 'channel_username': 'chchndra_tattoo', 'channel_name': '–ß—É—á—É–Ω–¥—Ä–∞'},
    {'channel_id': -1002133674248, 'channel_username': 'naidenka_tattoo', 'channel_name': 'naidenka_tattoo'},
    {'channel_id': -1001508215942, 'channel_username': 'l1n_ttt', 'channel_name': 'Lin++'},
    {'channel_id': -1001555462429, 'channel_username': 'murderd0lll', 'channel_name': 'MurderdOll'},
    {'channel_id': -1002132954014, 'channel_username': 'poteryashkatattoo', 'channel_name': '–ü–æ—Ç–µ—Ä—è—à–∫–∞'},
    {'channel_id': -1001689395571, 'channel_username': 'EMI3MO', 'channel_name': 'EMI'},
    {'channel_id': -1001767997947, 'channel_username': 'bloodivamp', 'channel_name': 'bloodivamp'},
    {'channel_id': -1001973736826, 'channel_username': 'G_T_MODEL', 'channel_name': 'Gothams top model'},
]

class GTMSupabaseBot:
    def __init__(self):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Supabase
        if not validate_supabase_config():
            logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase")
            raise ValueError("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase")
        
        self.application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
        self.setup_handlers()
        logger.info("‚úÖ GTM Supabase Bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("check", self.check_subscription))
        self.application.add_handler(CommandHandler("tickets", self.show_tickets))
        self.application.add_handler(CommandHandler("folder", self.show_folder))
        self.application.add_handler(CommandHandler("invite", self.invite_command))
        self.application.add_handler(CommandHandler("stats", self.stats_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CallbackQueryHandler(self.handle_callback))
        self.application.add_handler(MessageHandler(filters.TEXT & filters.Regex(r'^üÉè –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π$'), self.handle_invite_button))
        
    def get_webapp_keyboard(self):
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
        keyboard = [
            [
                InlineKeyboardButton(
                    text="üîÆ Open GTM",
                    web_app=WebAppInfo(url=WEBAPP_URL)
                ),
                InlineKeyboardButton(
                    text="üí≠ CHAT",
                    url="https://t.me/G_T_MODEL/10"
                )
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
        
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        referral_code = None
        if context.args and len(context.args) > 0:
            referral_code = context.args[0]
            # –ù–∞—á–∏—Å–ª—è–µ–º –±–∏–ª–µ—Ç —Ä–µ—Ñ–µ—Ä–µ—Ä—É, –µ—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if await self.is_new_user(user.id):
                await self.add_referral_ticket_by_code(referral_code)
        
        welcome_message = f"""‚ò†Ô∏è –ü—Ä–∏–≤–µ—Ç, {user.first_name}! ‚ò†Ô∏è

üëÑ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ Gotham's Top Model ‚Äî –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ª—É—á—à–∏—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤ –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ!

–ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å:
ü§ñ AI-–ø–æ–∏—Å–∫ —É—Å–ª—É–≥ –ø–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–∞–º
üÉè –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–ø–æ–≤—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤
üé∞ –†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤ –Ω–∞ >130,000‚ÇΩ
üé± –°–∫–∏–¥–∫–∞ 8% –Ω–∞ —É—Å–ª—É–≥–∏ –≤—Å–µ—Ö —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤ GTM
üíû –©–µ–¥—Ä–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞

–ù–∞–∂–º–∏ ¬´üîÆ Open GTM¬ª, —á—Ç–æ–±—ã –≤–æ—Ä–≤–∞—Ç—å—Å—è!"""
        
        await update.message.reply_text(
            welcome_message,
            reply_markup=self.get_webapp_keyboard()
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase
        await self.save_user(user)
        
    async def check_subscription(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã"""
        user = update.effective_user
        
        await update.message.reply_text("üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã...")
        
        subscribed_channels = []
        not_subscribed_channels = []
        
        for channel in SUBSCRIPTION_CHANNELS:
            try:
                member = await context.bot.get_chat_member(
                    chat_id=channel['channel_id'],
                    user_id=user.id
                )
                
                if member.status in ['member', 'administrator', 'creator']:
                    subscribed_channels.append(channel)
                else:
                    not_subscribed_channels.append(channel)
                    
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–Ω–∞–ª–∞ {channel['channel_name']}: {e}")
                not_subscribed_channels.append(channel)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –Ω–∞ –≤—Å–µ 9 –∫–∞–Ω–∞–ª–æ–≤
        is_subscribed_to_all = len(subscribed_channels) == 9
        
        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∏–ª–µ—Ç–∞
        result = await supabase_client.check_subscription_and_award_ticket(user.id, is_subscribed_to_all)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response = "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫:\n\n"
        
        if subscribed_channels:
            response += "‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞:\n"
            for channel in subscribed_channels:
                response += f"‚Ä¢ {channel['channel_name']}\n"
            response += "\n"
        
        if not_subscribed_channels:
            response += "‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞:\n"
            for channel in not_subscribed_channels:
                response += f"‚Ä¢ {channel['channel_name']}\n"
            response += "\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∏–ª–µ—Ç–∞—Ö
        if result.get('ticket_awarded', False):
            response += "üé´ –ë–∏–ª–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø–∞–ø–∫—É!\n"
        else:
            if not is_subscribed_to_all:
                response += f"‚ö†Ô∏è –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–ª–µ—Ç–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å–µ {len(SUBSCRIPTION_CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤\n\n"
                response += f"üìÅ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø–∞–ø–∫—É GTM: {TELEGRAM_FOLDER_LINK}\n"
                response += "üîí –ù–µ –æ—Ç–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –¥–æ –∫–æ–Ω—Ü–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞!"
            else:
                response += "‚úÖ –ë–∏–ª–µ—Ç –∑–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –±–∏–ª–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_tickets = result.get('total_tickets', 0)
        total_tickets = await supabase_client.get_total_tickets()
        response += f"\nüé´ –í–∞—à–∏ –±–∏–ª–µ—Ç—ã: {user_tickets}/{total_tickets}"
        
        await update.message.reply_text(response)
        
    async def show_tickets(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤"""
        user = update.effective_user
        user_stats = await supabase_client.get_user_stats(user.id)
        
        subscription_tickets = user_stats.get('subscription_tickets', 0)
        referral_tickets = user_stats.get('referral_tickets', 0)
        total_tickets = user_stats.get('total_tickets', 0)
        
        message = f"""üé´ –ë–∏–ª–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name}

üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–ª–µ—Ç–æ–≤:
‚Ä¢ –ó–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø–∞–ø–∫—É: {subscription_tickets}/1
‚Ä¢ –ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π: {referral_tickets}/10
‚Ä¢ –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {total_tickets}

üéÅ –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ GTM!"""
        await update.message.reply_text(message)
        
    async def show_folder(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–∞–ø–∫—É GTM"""
        message = f"""üìÅ Telegram –ø–∞–ø–∫–∞ GTM

üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É: {TELEGRAM_FOLDER_LINK}

üìã –í –ø–∞–ø–∫–µ —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –∫–∞–Ω–∞–ª—ã GTM:
‚Ä¢ –†–µ–∂—å –º–µ–Ω—è –≤—Å–µ—Ä—å—ë–∑
‚Ä¢ –ß—É—á—É–Ω–¥—Ä–∞
‚Ä¢ naidenka_tattoo
‚Ä¢ Lin++
‚Ä¢ MurderdOll
‚Ä¢ –ü–æ—Ç–µ—Ä—è—à–∫–∞
‚Ä¢ EMI
‚Ä¢ bloodivamp
‚Ä¢ Gothams top model

üé´ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø–∞–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤!"""
        await update.message.reply_text(message)
        
    async def invite_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π"""
        user = update.effective_user
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        referral_code = await self.get_or_create_referral_code(user.id)
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        invite_text = self.get_invite_message(user.first_name, referral_code)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await update.message.reply_text(
            invite_text,
            reply_markup=self.get_invite_keyboard(referral_code),
            parse_mode='HTML'
        )
        
    async def handle_invite_button(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π'"""
        user = update.effective_user
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        referral_code = await self.get_or_create_referral_code(user.id)
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        invite_text = self.get_invite_message(user.first_name, referral_code)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=invite_text,
            reply_markup=self.get_invite_keyboard(referral_code),
            parse_mode='HTML'
        )
        
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–º–æ—â—å"""
        help_text = f"""ü§ñ GTM Bot - –ü–æ–º–æ—â—å

üìã –ö–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/check - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
/tickets - –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤
/folder - –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É GTM
/invite - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üé´ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–∏–ª–µ—Ç—ã:
‚Ä¢ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –≤—Å–µ 9 –∫–∞–Ω–∞–ª–æ–≤ GTM (+1 –±–∏–ª–µ—Ç)
‚Ä¢ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ (+1 –±–∏–ª–µ—Ç, –º–∞–∫—Å–∏–º—É–º 10)

üéÅ –†–æ–∑—ã–≥—Ä—ã—à GTM - –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑ 20000‚ÇΩ!"""
        await update.message.reply_text(help_text)
        
    async def stats_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)"""
        user = update.effective_user
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        if user.id != 6358105675:  # ID –∞–¥–º–∏–Ω–∞
            await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
            return
            
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ Supabase
        stats = await supabase_client.get_tickets_stats()
        
        total_subscription_tickets = stats.get('total_subscription_tickets', 0)
        total_referral_tickets = stats.get('total_referral_tickets', 0)
        total_user_tickets = stats.get('total_user_tickets', 0)
        
        stats_text = f"""üé∞ <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê GTM –ë–û–¢–ê (Supabase)</b>

üé´ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∏–ª–µ—Ç–æ–≤:
‚Ä¢ –ó–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–∞–ø–∫—É: {total_subscription_tickets}
‚Ä¢ –ó–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {total_referral_tickets}
‚Ä¢ –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {total_user_tickets}

üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M')}"""
        
        await update.message.reply_text(stats_text, parse_mode='HTML')
        
    async def handle_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫"""
        query = update.callback_query
        await query.answer()
        
        if query.data == "my_stats":
            user = query.from_user
            stats = await supabase_client.get_user_stats(user.id)
            
            subscription_tickets = stats.get('subscription_tickets', 0)
            referral_tickets = stats.get('referral_tickets', 0)
            total_tickets = stats.get('total_tickets', 0)
            
            stats_text = f"""üé∞ –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

üÉè –ü—Ä–æ—Ñ–∏–ª—å:
‚Ä¢ User ID: {user.id}
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã: {'‚úÖ' if subscription_tickets > 0 else '‚ùå'}

üé´ –ë–∏–ª–µ—Ç—ã:
‚Ä¢ –ó–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø–∞–ø–∫—É: {subscription_tickets}/1
‚Ä¢ –ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π: {referral_tickets}/10
‚Ä¢ –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {total_tickets}

üé∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
<code>https://t.me/GTM_ROBOT?start={stats.get('referral_code', '')}</code>"""
            
            await query.edit_message_text(stats_text, parse_mode='HTML')
    
    # === Supabase –º–µ—Ç–æ–¥—ã ===
    async def save_user(self, user):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase"""
        try:
            user_data = {
                'telegram_id': user.id,
                'username': user.username,
                'first_name': user.first_name,
                'last_name': user.last_name,
                'subscription_tickets': 0,
                'referral_tickets': 0,
                'total_tickets': 0
            }
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            existing_user = await supabase_client.get_user(user.id)
            if existing_user:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await supabase_client.update_user(user.id, user_data)
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await supabase_client.create_user(user_data)
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase: {e}")
    
    async def is_new_user(self, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–æ–≤—ã–π –ª–∏ —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
        try:
            user = await supabase_client.get_user(user_id)
            return user is None
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return False
    
    async def add_referral_ticket_by_code(self, referral_code: str):
        """–î–æ–±–∞–≤–∏—Ç—å –±–∏–ª–µ—Ç –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –ø–æ –∫–æ–¥—É"""
        try:
            await supabase_client.add_referral_ticket(referral_code)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∏–ª–µ—Ç–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {e}")
    
    async def get_or_create_referral_code(self, telegram_id: int) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥"""
        try:
            user = await supabase_client.get_user(telegram_id)
            if user and user.get('referral_code'):
                return user['referral_code']
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
            referral_code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º
            await supabase_client.update_user(telegram_id, {'referral_code': referral_code})
            
            return referral_code
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞: {e}")
            return "ERROR"
    
    def get_invite_message(self, user_name: str, referral_code: str) -> str:
        """–°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        return f"""üé∞ <b>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ GTM</b>

üëã –ü—Ä–∏–≤–µ—Ç! {user_name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç —Ç–µ–±—è –≤ Gotham's Top Model!

üéÅ –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:
‚Ä¢ üÉè –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–ø–æ–≤—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤
‚Ä¢ ü§ñ AI-–ø–æ–∏—Å–∫ —É—Å–ª—É–≥
‚Ä¢ üé∞ –†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤ –Ω–∞ >130,000‚ÇΩ
‚Ä¢ üé± –°–∫–∏–¥–∫–∞ 8% –Ω–∞ —É—Å–ª—É–≥–∏
‚Ä¢ üíû –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞

üé´ –ó–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å—Å—ã–ª–∫–µ {user_name} –ø–æ–ª—É—á–∏—Ç +1 –±–∏–ª–µ—Ç!

üîó <a href="https://t.me/GTM_ROBOT?start={referral_code}">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ GTM</a>"""
    
    def get_invite_keyboard(self, referral_code: str):
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
        keyboard = [
            [
                InlineKeyboardButton(
                    text="üé∞ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ GTM",
                    url=f"https://t.me/GTM_ROBOT?start={referral_code}"
                )
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ GTM Supabase Bot...")
        self.application.run_polling()

if __name__ == "__main__":
    bot = GTMSupabaseBot()
    bot.run() 