#!/usr/bin/env python3
"""
aiogram GTM Telegram Bot —Å Supabase –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π (–±–µ–∑ Router, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ Dispatcher)
"""
import os
import asyncio
import logging
import random
import string
from datetime import datetime
from typing import List

from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, F
from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    WebAppInfo
)
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

from supabase_client import supabase_client
from supabase_config import validate_supabase_config

load_dotenv()

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '')
TELEGRAM_FOLDER_LINK = os.getenv('TELEGRAM_FOLDER_LINK', 'https://t.me/addlist/qRX5VmLZF7E3M2U9')
WEBAPP_URL = os.getenv('WEBAPP_URL', 'https://gtm.baby')
ADMIN_ID = int(os.getenv('ADMIN_ID', '6358105675'))

# 9 –∫–∞–Ω–∞–ª–æ–≤
SUBSCRIPTION_CHANNELS: List[dict] = [
    {'channel_id': -1002088959587, 'channel_username': 'rejmenyavseryoz', 'channel_name': '–†–µ–∂—å –º–µ–Ω—è –≤—Å–µ—Ä—å—ë–∑'},
    {'channel_id': -1001971855072, 'channel_username': 'chchndra_tattoo', 'channel_name': '–ß—É—á—É–Ω–¥—Ä–∞'},
    {'channel_id': -1002133674248, 'channel_username': 'naidenka_tattoo', 'channel_name': 'naidenka_tattoo'},
    {'channel_id': -1001508215942, 'channel_username': 'l1n_ttt', 'channel_name': 'Lin++'},
    {'channel_id': -1001555462429, 'channel_username': 'murderd0lll', 'channel_name': 'MurderdOll'},
    {'channel_id': -1002132954014, 'channel_username': 'poteryashkatattoo', 'channel_name': '–ü–æ—Ç–µ—Ä—è—à–∫–∞'},
    {'channel_id': -1001689395571, 'channel_username': 'EMI3MO', 'channel_name': 'EMI'},
    {'channel_id': -1001767997947, 'channel_username': 'bloodivamp', 'channel_name': 'bloodivamp'},
    {'channel_id': -1001973736826, 'channel_username': 'G_T_MODEL', 'channel_name': 'Gothams top model'},
]

if not validate_supabase_config():
    logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase")

bot = Bot(token=TELEGRAM_BOT_TOKEN)


def get_webapp_keyboard() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.row(
        InlineKeyboardButton(text="üîÆ Open GTM", web_app=WebAppInfo(url=WEBAPP_URL)),
        InlineKeyboardButton(text="üí≠ CHAT", url="https://t.me/G_T_MODEL/10"),
    )
    return kb.as_markup()


async def get_or_create_referral_code(telegram_id: int) -> str:
    user = await supabase_client.get_user(telegram_id)
    if user and user.get('referral_code'):
        return user['referral_code']
    code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
    await supabase_client.update_user(telegram_id, {'referral_code': code})
    return code


async def cmd_start(message: Message):
    user = message.from_user
    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ-–∫–æ–¥–∞
    args = message.text.split()
    if len(args) > 1:
        referral_code = args[1]
        # –ù–∞—á–∏—Å–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª –±–∏–ª–µ—Ç, –µ—Å–ª–∏ –Ω–æ–≤—ã–π
        existing = await supabase_client.get_user(user.id)
        if existing is None:
            await supabase_client.add_referral_ticket(referral_code)
    welcome_message = (
        f"‚ò†Ô∏è –ü—Ä–∏–≤–µ—Ç, {user.first_name}! ‚ò†Ô∏è\n\n"
        "üëÑ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ Gotham's Top Model ‚Äî –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ª—É—á—à–∏—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤ –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ!\n\n"
        "–ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å:\n"
        "ü§ñ AI-–ø–æ–∏—Å–∫ —É—Å–ª—É–≥ –ø–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–∞–º\n"
        "üÉè –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–ø–æ–≤—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤\n"
        "üé∞ –†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤ –Ω–∞ >130,000‚ÇΩ\n"
        "üé± –°–∫–∏–¥–∫–∞ 8% –Ω–∞ —É—Å–ª—É–≥–∏ –≤—Å–µ—Ö —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤ GTM\n"
        "üíû –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n\n"
        "–ù–∞–∂–º–∏ ¬´üîÆ Open GTM¬ª, —á—Ç–æ–±—ã –≤–æ—Ä–≤–∞—Ç—å—Å—è!"
    )
    await message.answer(welcome_message, reply_markup=get_webapp_keyboard())
    # save user
    await save_user(user.id, user.username, user.first_name, user.last_name)


async def save_user(user_id: int, username: str, first_name: str, last_name: str):
    user_data = {
        'telegram_id': user_id,
        'username': username,
        'first_name': first_name,
        'last_name': last_name,
        'subscription_tickets': 0,
        'referral_tickets': 0,
        'total_tickets': 0
    }
    existing_user = await supabase_client.get_user(user_id)
    if existing_user:
        await supabase_client.update_user(user_id, user_data)
    else:
        await supabase_client.create_user(user_data)


async def cmd_check(message: Message):
    user = message.from_user
    await message.answer("üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã...")

    subscribed = []
    not_subscribed = []
    for ch in SUBSCRIPTION_CHANNELS:
        try:
            member = await bot.get_chat_member(chat_id=ch['channel_id'], user_id=user.id)
            if member.status in ('member', 'administrator', 'creator'):
                subscribed.append(ch)
            else:
                not_subscribed.append(ch)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–Ω–∞–ª–∞ {ch['channel_name']}: {e}")
            not_subscribed.append(ch)

    is_all = len(subscribed) == 9
    result = await supabase_client.check_subscription_and_award_ticket(user.id, is_all)

    lines = ["üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫:\n"]
    if subscribed:
        lines.append("‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞:")
        lines += [f"‚Ä¢ {c['channel_name']}" for c in subscribed]
        lines.append("")
    if not_subscribed:
        lines.append("‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞:")
        lines += [f"‚Ä¢ {c['channel_name']}" for c in not_subscribed]
        lines.append("")

    if result.get('ticket_awarded', False):
        lines.append("üé´ –ë–∏–ª–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø–∞–ø–∫—É!")
    else:
        if not is_all:
            lines.append(f"‚ö†Ô∏è –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–ª–µ—Ç–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å–µ {len(SUBSCRIPTION_CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤")
            lines.append(f"üìÅ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø–∞–ø–∫—É GTM: {TELEGRAM_FOLDER_LINK}")
            lines.append("üîí –ù–µ –æ—Ç–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –¥–æ –∫–æ–Ω—Ü–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞!")
        else:
            lines.append("‚úÖ –ë–∏–ª–µ—Ç –∑–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —É–∂–µ –Ω–∞—á–∏—Å–ª–µ–Ω")

    total_user = result.get('total_tickets', 0)
    total_all = await supabase_client.get_total_tickets()
    lines.append(f"\nüé´ –í–∞—à–∏ –±–∏–ª–µ—Ç—ã: {total_user}/{total_all}")

    await message.answer("\n".join(lines))


async def cmd_tickets(message: Message):
    user = message.from_user
    stats = await supabase_client.get_user_stats(user.id)
    text = (
        f"üé´ –ë–∏–ª–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name}\n\n"
        f"üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–ª–µ—Ç–æ–≤:\n"
        f"‚Ä¢ –ó–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ø–∞–ø–∫—É: {stats.get('subscription_tickets', 0)}/1\n"
        f"‚Ä¢ –ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π: {stats.get('referral_tickets', 0)}/10\n"
        f"‚Ä¢ –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {stats.get('total_tickets', 0)}\n\n"
        "üéÅ –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ GTM!"
    )
    await message.answer(text)


async def cmd_folder(message: Message):
    text = (
        "üìÅ Telegram –ø–∞–ø–∫–∞ GTM\n\n"
        f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É: {TELEGRAM_FOLDER_LINK}\n\n"
        "üìã –í –ø–∞–ø–∫–µ —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ –∫–∞–Ω–∞–ª—ã GTM:\n"
        "‚Ä¢ –†–µ–∂—å –º–µ–Ω—è –≤—Å–µ—Ä—å—ë–∑\n"
        "‚Ä¢ –ß—É—á—É–Ω–¥—Ä–∞\n"
        "‚Ä¢ naidenka_tattoo\n"
        "‚Ä¢ Lin++\n"
        "‚Ä¢ MurderdOll\n"
        "‚Ä¢ –ü–æ—Ç–µ—Ä—è—à–∫–∞\n"
        "‚Ä¢ EMI\n"
        "‚Ä¢ bloodivamp\n"
        "‚Ä¢ Gothams top model\n\n"
        "üé´ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø–∞–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤!"
    )
    await message.answer(text)


async def cmd_invite(message: Message):
    user = message.from_user
    code = await get_or_create_referral_code(user.id)
    text = (
        "üé∞ <b>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ GTM</b>\n\n"
        f"üëã –ü—Ä–∏–≤–µ—Ç! {user.first_name} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç —Ç–µ–±—è –≤ Gotham's Top Model!\n\n"
        "üéÅ –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:\n"
        "‚Ä¢ üÉè –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–ø–æ–≤—ã—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤\n"
        "‚Ä¢ ü§ñ AI-–ø–æ–∏—Å–∫ —É—Å–ª—É–≥\n"
        "‚Ä¢ üé∞ –†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤ –Ω–∞ >130,000‚ÇΩ\n"
        "‚Ä¢ üé± –°–∫–∏–¥–∫–∞ 8% –Ω–∞ —É—Å–ª—É–≥–∏\n"
        "‚Ä¢ üíû –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n\n"
        f"üé´ –ó–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å—Å—ã–ª–∫–µ {user.first_name} –ø–æ–ª—É—á–∏—Ç +1 –±–∏–ª–µ—Ç!\n\n"
        f"üîó <a href=\"https://t.me/GTM_ROBOT?start={code}\">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ GTM</a>"
    )
    kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="üé∞ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ GTM", url=f"https://t.me/GTM_ROBOT?start={code}")]])
    await message.answer(text, reply_markup=kb, parse_mode="HTML")


async def cmd_help(message: Message):
    text = (
        "ü§ñ GTM Bot - –ü–æ–º–æ—â—å\n\n"
        "üìã –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/check - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã\n"
        "/tickets - –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤\n"
        "/folder - –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–∞–ø–∫—É GTM\n"
        "/invite - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "üé´ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–∏–ª–µ—Ç—ã:\n"
        "‚Ä¢ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –≤—Å–µ 9 –∫–∞–Ω–∞–ª–æ–≤ GTM (+1 –±–∏–ª–µ—Ç)\n"
        "‚Ä¢ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ (+1 –±–∏–ª–µ—Ç, –º–∞–∫—Å–∏–º—É–º 10)\n\n"
        "üéÅ –†–æ–∑—ã–≥—Ä—ã—à GTM - –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑ 20000‚ÇΩ!"
    )
    await message.answer(text)


async def cmd_stats(message: Message):
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return
    stats = await supabase_client.get_tickets_stats()
    text = (
        "üé∞ <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê GTM –ë–û–¢–ê (Supabase)</b>\n\n"
        f"üé´ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∏–ª–µ—Ç–æ–≤:\n"
        f"‚Ä¢ –ó–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–∞–ø–∫—É: {stats.get('total_subscription_tickets', 0)}\n"
        f"‚Ä¢ –ó–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {stats.get('total_referral_tickets', 0)}\n"
        f"‚Ä¢ –í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: {stats.get('total_user_tickets', 0)}\n\n"
        f"üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
    )
    await message.answer(text, parse_mode="HTML")


def register_handlers(dp: Dispatcher):
    dp.message.register(cmd_start, Command("start"))
    dp.message.register(cmd_check, Command("check"))
    dp.message.register(cmd_tickets, Command("tickets"))
    dp.message.register(cmd_folder, Command("folder"))
    dp.message.register(cmd_invite, Command("invite"))
    dp.message.register(cmd_help, Command("help"))
    dp.message.register(cmd_stats, Command("stats"))
    dp.message.register(cmd_invite, F.text == "üÉè –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π")


async def main():
    if not TELEGRAM_BOT_TOKEN:
        raise RuntimeError("TELEGRAM_BOT_TOKEN not set")
    dp = Dispatcher()
    register_handlers(dp)
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ GTM Supabase aiogram Bot...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())