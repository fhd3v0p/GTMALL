#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
"""

import requests
import json

# Supabase Configuration
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"

# Headers for Supabase API
HEADERS = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json',
}

def test_products_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–æ–¥—É–∫—Ç–æ–≤...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/products",
            headers=HEADERS
        )
        
        print(f"üìã –¢–µ—Å—Ç 1 - –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            products = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(products)}")
            for product in products:
                print(f"   - {product.get('name')} (ID: {product.get('id')}, Master: {product.get('master_id')})")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –∞—Ä—Ç–∏—Å—Ç–∞ GTM (ID 14)
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/products?master_id=eq.14",
            headers=HEADERS
        )
        
        print(f"\nüìã –¢–µ—Å—Ç 2 - –ü—Ä–æ–¥—É–∫—Ç—ã –∞—Ä—Ç–∏—Å—Ç–∞ GTM (ID 14):")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            products = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(products)}")
            for product in products:
                print(f"   - {product.get('name')} (ID: {product.get('id')})")
                print(f"     –¶–µ–Ω–∞: {product.get('price')} ‚ÇΩ")
                print(f"     –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.get('category')}")
                print(f"     –ê–≤–∞—Ç–∞—Ä: {product.get('avatar')}")
                print(f"     –ì–∞–ª–µ—Ä–µ—è: {product.get('gallery')}")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_storage_bucket():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ Storage bucket"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Storage bucket...")
    
    bucket_name = "gtm-assets-public"
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –∞—Ä—Ç–∏—Å—Ç–∞ GTM
    try:
        avatar_url = f"{SUPABASE_URL}/storage/v1/object/public/{bucket_name}/artists/14/avatar.png"
        response = requests.head(avatar_url)
        
        print(f"üìã –¢–µ—Å—Ç 1 - –ê–≤–∞—Ç–∞—Ä –∞—Ä—Ç–∏—Å—Ç–∞ GTM:")
        print(f"   URL: {avatar_url}")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("   ‚úÖ –ê–≤–∞—Ç–∞—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("   ‚ùå –ê–≤–∞—Ç–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ GTM
    try:
        product_avatar_url = f"{SUPABASE_URL}/storage/v1/object/public/{bucket_name}/products/GTM_Tshirt/avatar.jpg"
        response = requests.head(product_avatar_url)
        
        print(f"\nüìã –¢–µ—Å—Ç 2 - –ê–≤–∞—Ç–∞—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ GTM:")
        print(f"   URL: {product_avatar_url}")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("   ‚úÖ –ê–≤–∞—Ç–∞—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("   ‚ùå –ê–≤–∞—Ç–∞—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∞–ª–µ—Ä–µ—é –ø—Ä–æ–¥—É–∫—Ç–∞
    try:
        gallery_url = f"{SUPABASE_URL}/storage/v1/object/public/{bucket_name}/products/GTM_Tshirt/gallery1.jpg"
        response = requests.head(gallery_url)
        
        print(f"\nüìã –¢–µ—Å—Ç 3 - –ì–∞–ª–µ—Ä–µ—è –ø—Ä–æ–¥—É–∫—Ç–∞ GTM:")
        print(f"   URL: {gallery_url}")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("   ‚úÖ –ì–∞–ª–µ—Ä–µ—è –¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            print("   ‚ùå –ì–∞–ª–µ—Ä–µ—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_artists_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∞—Ä—Ç–∏—Å—Ç–æ–≤"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∞—Ä—Ç–∏—Å—Ç–æ–≤...")
    
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/artists",
            headers=HEADERS
        )
        
        print(f"üìã –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            artists = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä—Ç–∏—Å—Ç–æ–≤: {len(artists)}")
            
            # –ù–∞–π—Ç–∏ –∞—Ä—Ç–∏—Å—Ç–∞ GTM
            gtm_artist = None
            for artist in artists:
                if artist.get('name') == 'GTM':
                    gtm_artist = artist
                    break
            
            if gtm_artist:
                print(f"   ‚úÖ –ê—Ä—Ç–∏—Å—Ç GTM –Ω–∞–π–¥–µ–Ω (ID: {gtm_artist.get('id')})")
                print(f"      –ê–≤–∞—Ç–∞—Ä URL: {gtm_artist.get('avatar_url')}")
                print(f"      –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: {gtm_artist.get('specialties')}")
            else:
                print("   ‚ùå –ê—Ä—Ç–∏—Å—Ç GTM –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    test_products_api()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Storage bucket
    test_storage_bucket()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∞—Ä—Ç–∏—Å—Ç–æ–≤
    test_artists_loading()
    
    print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 