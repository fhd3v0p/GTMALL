#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ Supabase
"""

import requests
import json

# Supabase Configuration
SUPABASE_URL = "https://rxmtovqxjsvogyywyrha.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4bXRvdnF4anN2b2d5eXd5cmhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ1Mjg1NTAsImV4cCI6MjA3MDEwNDU1MH0.gDkJybktFoi486hbIVwppDfmVQlAR0fM4o4Sl1-AxhE"

# Headers for Supabase API
HEADERS = {
    'apikey': SUPABASE_ANON_KEY,
    'Authorization': f'Bearer {SUPABASE_ANON_KEY}',
    'Content-Type': 'application/json',
}

def check_all_products():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã"""
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/products",
            headers=HEADERS
        )
        
        if response.status_code == 200:
            products = response.json()
            print(f"üìã –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã ({len(products)}):")
            for product in products:
                name = product.get('name', 'Unknown')
                master_id = product.get('master_id')
                category = product.get('category')
                price = product.get('price')
                print(f"   {name} (ID: {product.get('id')}, Master: {master_id}, Category: {category}, Price: {price})")
            
            return products
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {e}")
        return []

def check_gtm_products():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –∞—Ä—Ç–∏—Å—Ç–∞ GTM (ID 14)"""
    try:
        response = requests.get(
            f"{SUPABASE_URL}/rest/v1/products?master_id=eq.14",
            headers=HEADERS
        )
        
        if response.status_code == 200:
            products = response.json()
            print(f"\nüìã –ü—Ä–æ–¥—É–∫—Ç—ã –∞—Ä—Ç–∏—Å—Ç–∞ GTM (ID 14):")
            if products:
                for product in products:
                    print(f"   ‚úÖ {product.get('name')} (ID: {product.get('id')})")
                    print(f"      –¶–µ–Ω–∞: {product.get('price')} ‚ÇΩ")
                    print(f"      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.get('category')}")
                    print(f"      –†–∞–∑–º–µ—Ä—ã: {product.get('size')}")
                    print(f"      –û–ø–∏—Å–∞–Ω–∏–µ: {product.get('description')}")
            else:
                print("   ‚ùå –ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            return products
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ GTM: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ GTM: {e}")
        return []

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    all_products = check_all_products()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã GTM
    gtm_products = check_gtm_products()
    
    print(f"\nüéØ –í—ã–≤–æ–¥:")
    if gtm_products:
        print(f"‚úÖ –£ –∞—Ä—Ç–∏—Å—Ç–∞ GTM –µ—Å—Ç—å {len(gtm_products)} –ø—Ä–æ–¥—É–∫—Ç(–æ–≤)")
    else:
        print("‚ùå –£ –∞—Ä—Ç–∏—Å—Ç–∞ GTM –Ω–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ - –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å")

if __name__ == "__main__":
    main() 